{
	"info": {
		"_postman_id": "df6aedd8-6589-4a0c-8f5c-3c4781547ce1",
		"name": "levelup-graphql",
		"description": "Rotas da API Graphql da Aplicação do LevelUp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20305046"
	},
	"item": [
		{
			"name": "Test Connection",
			"item": [
				{
					"name": "Test Connection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n    testConnection\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Rota para teste de conexão com a API, caso esteja tudo funcionando será retornado uma mensagem \"Conexão estabelecida!\""
					},
					"response": []
				},
				{
					"name": "List All Query and Mutation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/graphql/schema.graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql",
								"schema.graphql"
							]
						},
						"description": "Retorna uma página HTML contendo todas as consultas da API, todos os tipos de Objetos, argumentos necessários de cada consulta, retornos disponíveis e tipos de dados."
					},
					"response": []
				}
			],
			"description": "Rotas de estabelecimento de conexão e listagem de todas as rotas, contendo todos os parâmetros necessários para o envio da requisição e qual será o tipo de dado retornado."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "query",
					"item": [
						{
							"name": "List All Data of all Users",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tlistAllUsers {\r\n\t\tid\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tclasse\r\n\t\tcolor_hex\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tcreation_date\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								},
								"description": "Pode retornar todos os dados de todos os usuários, você define quais dados você quer retornar, essa é a mágica do GraphQl. Por exemplo:\n\n1. Se você quer retornar apenas nome, email e cpf:\n    \n\n``` graphql\nquery {\n    listAllUsers {\n        name\n        cpf\n        email\n    }\n}\n\n\n```"
							},
							"response": []
						},
						{
							"name": "Find By Id",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tfindById(id: 1) {\r\n\t\tid\r\n\t\tclasse\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tsoftHardSkills {\r\n\t\t\tid\r\n\t\t\tskill {\r\n\t\t\t\tskill\r\n\t\t\t\ttype\r\n\t\t\t}\r\n\t\t\tlevel\r\n\t\t}\r\n\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								},
								"description": "Retorna um usuário através de seu ID, deverá ser passado o id de um usuário previamente cadastrado, caso contrário será retornado um erro."
							},
							"response": []
						},
						{
							"name": "Find By UserName",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tfindByUserName (\r\n        username:\"JoaoGamer\"\r\n    ){\r\n\t\tid\r\n\t\tclasse\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tsoftHardSkills {\r\n\t\t\tid\r\n\t\t\tskill {\r\n\t\t\t\tskill\r\n\t\t\t\ttype\r\n\t\t\t}\r\n\t\t\tlevel\r\n\t\t}\r\n\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find By Name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tfindByName (\r\n        name:\"Joao\"\r\n    ){\r\n\t\tid\r\n\t\tclasse\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tsoftHardSkills {\r\n\t\t\tid\r\n\t\t\tskill {\r\n\t\t\t\tskill\r\n\t\t\t\ttype\r\n\t\t\t}\r\n\t\t\tlevel\r\n\t\t}\r\n\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find By Deleted True",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tfindByDeleted (\r\n        deleted:true\r\n    ){\r\n\t\tid\r\n\t\tclasse\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tsoftHardSkills {\r\n\t\t\tid\r\n\t\t\tskill {\r\n\t\t\t\tskill\r\n\t\t\t\ttype\r\n\t\t\t}\r\n\t\t\tlevel\r\n\t\t}\r\n\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find By Deleted False",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n\tfindByDeleted (\r\n        deleted:false\r\n    ){\r\n\t\tid\r\n\t\tclasse\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tsoftHardSkills {\r\n\t\t\tid\r\n\t\t\tskill {\r\n\t\t\t\tskill\r\n\t\t\t\ttype\r\n\t\t\t}\r\n\t\t\tlevel\r\n\t\t}\r\n\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "mutation",
					"item": [
						{
							"name": "Create User 1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\taddUser(\r\n\t\tuser: {\r\n\t\t\tname: \"João Baptista\"\r\n\t\t\tcpf: \"11112147608\"\r\n\t\t\tbirthdate: \"29/01/2000\"\r\n\t\t\tusername: \"JoaoGamer\"\r\n\t\t\temail: \"joaogamer@teste.com\"\r\n\t\t\tpassword_hash: \"@#!324asdadkllkj_*&sdfas\"\r\n\t\t\tclasse: \"MAGO\"\r\n\t\t}\r\n\t) {\r\n\t\tid\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\thobbies {\r\n\t\t\tid\r\n\t\t\thobbie\r\n\t\t}\r\n\t\tspecialties {\r\n\t\t\tid\r\n\t\t\tspeciality\r\n\t\t}\r\n\t\tstrongWeakSkills {\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Basic Information",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tupdateUserBasicInformation(\r\n\t\tid: 1\r\n\t\tuser: { \r\n            username: \"Joazinho123\"\r\n            email: \"joaogamer123@teste.com\"\r\n        }\r\n\t) {\r\n\t\tid\r\n\t\tname\r\n\t\tbirthdate\r\n\t\tcpf\r\n\t\tusername\r\n\t\temail\r\n\t\tpassword_hash\r\n\t\tcollegeInformation {\r\n\t\t\tid\r\n\t\t\tcourse {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tuniversity {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tperiod\r\n\t\t}\r\n\t\tcolor_hex\r\n\t\tuserMood\r\n\t\trole\r\n\t\tprofile_avatar\r\n\t\tprofile_picture\r\n\t\tdeleted\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n    login(\r\n        login:{\r\n        nome: \"JoaoGamer\"\r\n        senha : \"@#!324asdadkllkj_*&sdfas\"\r\n     }) \r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Nesta pasta estão todas as rotas referentes especificamente à classe de usuários, contendo um CRUD completo e alguns filtros de pesquisa.\n\n- **Na pasta Query estão as operações que não realizam alterações no banco de dados, apenas consultas.**\n- **Na pasta mutation estão as rotas que realizam alterações no banco de dados.**"
		},
		{
			"name": "Hobbie",
			"item": [
				{
					"name": "Add Hobbie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  addHobbie(\r\n  hobbie:{\r\n  hobbie:\"Jogar Futebol, Desenhar, Jardinagem\"\r\n  }\r\n  user:{\r\n    id:1\r\n  }\r\n  ){\r\n    id,hobbie,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Hobbie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  updateHobbie(\r\n  hobbie:{\r\n    hobbie:\"jogar videogame\"\r\n  }\r\n    id:1 \r\n  ){\r\n    id,hobbie,user{\r\n      id\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Hobbie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteHobbie(id:2)\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Hobbies",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n    listAllHobbies{\r\n        hobbie\r\n        id \r\n    }\r\n} \r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Specialities",
			"item": [
				{
					"name": "Add Speciality",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  addSpeciality(\r\n  speciality:{\r\n  speciality:\"Front end, Jogos de FPS, Culinária\"\r\n  }\r\n  user:{\r\n    id:1\r\n  }\r\n  ){\r\n    id,speciality,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Speciality",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  updateSpeciality(\r\n  speciality:{\r\n    speciality:\"Tocar pop\"\r\n  }\r\n    id:6\r\n  ){\r\n    id,speciality,\r\n    user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Speciality",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  deleteSpeciality(id:3)\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Specialities",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n    listAllHobbies{\r\n        hobbie\r\n        id \r\n    }\r\n} \r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Skills",
			"item": [
				{
					"name": "Strong or Weak Skills",
					"item": [
						{
							"name": "Add Strong",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\r\n  addStrongWeakSkills(\r\n  skill:{\r\n    skill:\"Trabalho em Equipe, Inteligencia emocional\"\r\n    type:STRONG\r\n  }\r\n  user:{\r\n    id:1\r\n  }\r\n  ){\r\n    id,skill,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Strong",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\r\n  updateStrongWeakSkills(\r\n\t\tid:5\r\n  skill:{\r\n    skill:\"Trabalho em Equipe, Inteligência emocional, Resiliência\"\r\n    type:STRONG\r\n  }\r\n  ){\r\n    id,skill,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Weak",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\r\n  addStrongWeakSkills(\r\n  skill:{\r\n    skill:\"Organização, Timidez\"\r\n    type:WEAK\r\n  }\r\n  user:{\r\n    id:1\r\n  }\r\n  ){\r\n    id,skill,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Weak",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\r\n  updateStrongWeakSkills(\r\n\t\tid:6\r\n  skill:{\r\n    skill:\"Organização, Timidez, Gestão de tempo\"\r\n    type:WEAK\r\n  }\r\n  ){\r\n    id,skill,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Soft or Hard Skills",
					"item": [
						{
							"name": "Create Soft or Hard Skill",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tcreateSoftHardSkills(\r\n\t\tsoftHardSkillList: [\r\n\t\t\t{ skill: \"Métodos ágeis\", type: HARD }\r\n\t\t\t{ skill: \"FrontEnd\", type: HARD }\r\n\t\t\t{ skill: \"BackEnd\", type: HARD }\r\n\t\t\t{skill:\"Programação Básica\", type:HARD}\r\n\t\t\t{skill:\"Pacote Office\", type:HARD}\r\n\t\t]\r\n\t) {\r\n\t\tid\r\n\t\tskill\r\n\t\ttype\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Soft or Hard Skill",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\r\n  updateSoftHardSkill(\r\n  skill:{\r\n    skill:\"Trabalho em Equipe\"\r\n    level: 1\r\n  }\r\n    id:1\r\n  ){\r\n    id,skill,user{\r\n      id\r\n      username\r\n    }\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Soft or Hard Skill List",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n\tcreateUserSoftHardSkill(\r\n\t\tuserId: 1\r\n\t\tsoftHardSkillList: [\r\n\t\t\t{ skill: \"Métodos ágeis\", type: HARD }\r\n\t\t\t{ skill: \"FrontEnd\", type: HARD }\r\n\t\t\t{ skill: \"BackEnd\", type: HARD }\r\n\t\t\t{ skill: \"Programação Básica\", type: HARD }\r\n\t\t\t{ skill: \"Pacote Office\", type: HARD }\r\n\t\t\t{ skill: \"Empreendedorismo\", type: SOFT }\r\n\t\t]\r\n\t) {\r\n\t\tid\r\n\t\tskill{\r\n\t\t\tid\r\n\t\t\tskill\r\n\t\t\ttype\r\n\t\t}\r\n\t\tuser {\r\n\t\t\tid\r\n\t\t\tusername\r\n\t\t}\r\n\t}\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "List All Soft or Hard Skill",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query{\r\n  listAllSoftHardSkill\r\n    {\r\n    id\r\n    skill\r\n    type\r\n  }\r\n}\r\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Mood",
			"item": [
				{
					"name": "Update User Mood",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n    updateUserMood(\r\n      id:1,\r\n      userMood:FELIZ\r\n    ){\r\n    id,username,userMood\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Mood",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n   listAllMood\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Picture Service",
			"item": [
				{
					"name": "Update Avatar",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n\tupdateAvatarPicture(\r\n\t\tid: 1\r\n\t\tnewPicture: \"\"\r\n\t) {\r\n\t\tid\r\n\t\tname\r\n\t\tprofile_avatar\r\n\t}\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile Picture",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n\tupdateProfilePicture(\r\n\t\tid: 1\r\n\t\tnewPicture: \"\"\r\n\t) {\r\n\t\tid\r\n\t\tname\r\n\t\tprofile_picture\r\n\t}\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "College",
			"item": [
				{
					"name": "Create University",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  createUniversity(\r\n    university:{\r\n        name:\"IFTM\"\r\n    }\r\n  ){\r\n    id\r\n    name\r\n    courses{\r\n        id\r\n        name\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Course",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  createCourse(\r\n    course:{\r\n        name:\"Licenciatura em Computação\",\r\n        university:{\r\n            id:2\r\n        }\r\n    }\r\n \r\n    \r\n  ){\r\n    id\r\n    name\r\n    university{\r\n        id,name\r\n    }\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update College Info of User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\r\n  updateUserCollegeInformation(\r\n    userId:1\r\n    college:{\r\n        course:{\r\n            id:3\r\n        }\r\n        period:2\r\n    }\r\n  ){\r\n    id\r\n\t\tname\r\n    email\r\n    cpf\r\n    collegeInformation{\r\n            id\r\n            course{\r\n                id\r\n                name\r\n                \r\n                university{\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n            period\r\n        }   \r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Universities",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  listAllUniversities{\r\n        id\r\n        name\r\n        courses{\r\n            id\r\n            name\r\n        }\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Courses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\r\n  listAllCourses{\r\n    id\r\n    name\r\n    \r\n    university{\r\n        id\r\n        name   \r\n    }\r\n\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8080/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}